<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.18">
  <POU Name="FB_CoE_Write" Id="{dd0856f6-a4c1-470a-beca-fb09638dc24b}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_CoE_Write
VAR_INPUT
	// Link this to your terminal's drive reference variables under InfoData.
	stPlcDriveRef : ST_PlcDriveRef;
END_VAR
VAR_OUTPUT
END_VAR
VAR
	// Write Error
	bWriteError : BOOL;
	// Data successfully sent
	bDataSent : BOOL := FALSE;
	
	fbCoeWrite: FB_CoEWrite_ByDriveRef;
	
	stDriveRef: ST_DriveRef;
	
	nState : BYTE := 0;   //State Machine
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[stDriveRef.sNetId := F_CreateAmsNetId(stPlcDriveRef.aNetId);
stDriveRef.nSlaveAddr := stPlcDriveRef.nSlaveAddr;
stDriveRef.nDriveNo := stPlcDriveRef.nDriveNo;
stDriveRef.nDriveType := stPlcDriveRef.nDriveType;

CASE nState OF
	0: //Idle state
		HandleIdle();
	1: //Writing data
		HandleWritingData();
	100: //Handle Error
		HandleError();
END_CASE]]></ST>
    </Implementation>
    <Action Name="HandleError" Id="{98f20886-2ef9-4d63-917f-95e80c4ac5cf}">
      <Implementation>
        <ST><![CDATA[// wait for reset ccmmand
bDataSent := FALSE;]]></ST>
      </Implementation>
    </Action>
    <Action Name="HandleIdle" Id="{20ca62bf-ad0a-4177-a59e-8311ad0fb51b}">
      <Implementation>
        <ST><![CDATA[fbCoeWrite(bExecute := FALSE);
// Reset DataSent bit
bDataSent := FALSE;]]></ST>
      </Implementation>
    </Action>
    <Action Name="HandleWritingData" Id="{f1cec576-6950-4b61-b35d-05dc9178ea43}">
      <Implementation>
        <ST><![CDATA[fbCoeWrite(bExecute := TRUE);       // Execute CoE write until done
IF fbCoeWrite.bError THEN
	nState := 100;     // Error case
	bWriteError := TRUE;
ELSE
	IF NOT fbCoeWrite.bBusy THEN
		nState := 0;    // Done
		bDataSent := TRUE;
	END_IF
END_IF]]></ST>
      </Implementation>
    </Action>
    <Method Name="InErrorState" Id="{9116d509-8999-416b-adbd-60527b13a43a}">
      <Declaration><![CDATA[METHOD InErrorState : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF nState = 100 THEN
	InErrorState := TRUE;
ELSE
	InErrorState := FALSE;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="IsBusy" Id="{508a4fdc-b906-4ba8-8612-c854593be8cf}">
      <Declaration><![CDATA[METHOD IsBusy : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF nState <> 0 THEN
	IsBusy := TRUE;
ELSE
	IsBusy := FALSE;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Property Name="IsDataSent" Id="{8a6f48ef-d77e-4d1b-bd8d-3fcf65210096}">
      <Declaration><![CDATA[PROPERTY IsDataSent : BOOL]]></Declaration>
      <Get Name="Get" Id="{0f6d758f-97ac-411f-95f2-181644180e78}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[IsDataSent := bDataSent;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="ResetError" Id="{a0677d16-b2a2-49d4-8dfc-d9f483828e92}">
      <Declaration><![CDATA[METHOD ResetError
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF nState <> 100 THEN
	RETURN;
END_IF

// Reset write error
bWriteError := FALSE;
// Go to Idle state
nState := 0;]]></ST>
      </Implementation>
    </Method>
    <Method Name="WriteData" Id="{2540e6f5-2c02-45e8-b017-e09b99229358}">
      <Declaration><![CDATA[METHOD WriteData
VAR_INPUT
	//stCoeParameter : ST_CoeParameter;
	nIndex: WORD;
	// Hexadecimal subindex of CoE, e.g. the 12 in 8010:12
	nSubIndex: BYTE;
	// Pointer to a value to fill with the result of the read, e.g. ADR(MyValue)
	pSrcBuf: PVOID;
	// Data size of pSrcBuf, e.g. SIZEOF(MyValue)
	cbBufLen: UDINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF nState <> 0 THEN
	RETURN;
END_IF

fbCoeWrite(
	stDriveRef := stDriveRef,
	nIndex := nIndex,
	nSubIndex := nSubIndex,
	pSrcBuf := pSrcBuf,
	cbBufLen := cbBufLen,
	tTimeout := T#1S,
);

// Go to Writing Data state
nState := 1;]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_CoE_Write">
      <LineId Id="39" Count="3" />
      <LineId Id="98" Count="0" />
      <LineId Id="50" Count="0" />
      <LineId Id="52" Count="0" />
      <LineId Id="54" Count="1" />
      <LineId Id="58" Count="0" />
      <LineId Id="63" Count="0" />
      <LineId Id="65" Count="0" />
      <LineId Id="53" Count="0" />
    </LineIds>
    <LineIds Name="FB_CoE_Write.HandleError">
      <LineId Id="1" Count="0" />
      <LineId Id="6" Count="0" />
    </LineIds>
    <LineIds Name="FB_CoE_Write.HandleIdle">
      <LineId Id="23" Count="0" />
      <LineId Id="22" Count="0" />
      <LineId Id="17" Count="0" />
    </LineIds>
    <LineIds Name="FB_CoE_Write.HandleWritingData">
      <LineId Id="2" Count="2" />
      <LineId Id="11" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="9" Count="0" />
      <LineId Id="7" Count="0" />
      <LineId Id="10" Count="0" />
      <LineId Id="8" Count="0" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="FB_CoE_Write.InErrorState">
      <LineId Id="6" Count="3" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_CoE_Write.IsBusy">
      <LineId Id="6" Count="3" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_CoE_Write.IsDataSent.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_CoE_Write.ResetError">
      <LineId Id="7" Count="1" />
      <LineId Id="5" Count="0" />
      <LineId Id="22" Count="0" />
      <LineId Id="21" Count="0" />
      <LineId Id="23" Count="0" />
      <LineId Id="12" Count="0" />
      <LineId Id="10" Count="0" />
    </LineIds>
    <LineIds Name="FB_CoE_Write.WriteData">
      <LineId Id="10" Count="1" />
      <LineId Id="9" Count="0" />
      <LineId Id="31" Count="0" />
      <LineId Id="25" Count="5" />
      <LineId Id="21" Count="0" />
      <LineId Id="32" Count="0" />
      <LineId Id="34" Count="0" />
      <LineId Id="20" Count="0" />
      <LineId Id="12" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>